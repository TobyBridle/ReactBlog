{"version":3,"file":"component---src-pages-explore-js-25fcab64ac853ca00abb.js","mappings":"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","sources":["webpack://blog/./src/components/Explore/PageMeta/PageMeta.js","webpack://blog/./src/state/filterAtom.js","webpack://blog/./src/components/Explore/PageFilter/PageFilter.js","webpack://blog/./src/components/Posts/Posts.js","webpack://blog/./src/pages/explore.js"],"sourcesContent":["import { faBookmark } from \"@fortawesome/free-regular-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PageMeta.css\";\n\nimport NavigationAtom from \"../../../state/navigationAtom\";\nimport { useRecoilState } from \"recoil\";\n\nfunction PageMeta({title=\"What's New?\", description=\"Trending Articles, or even ones from users you Follow\", className=\"\"}) {\n  const [, setActiveURL] = useRecoilState(NavigationAtom);\n\n  return (\n    <section className={`page-content-top ${className}`}>\n      <div className=\"page-meta\">\n        <h1 className=\"page-content-header\">{title}</h1>\n        <p className=\"page-content-description\">{description}</p>\n      </div>\n      <div className=\"page-actions\">\n        <label className=\"search-bar\">\n          <input type=\"text\" placeholder=\" \" />\n          <FontAwesomeIcon className=\"search-bar-icon\" icon={faSearch} />\n          <span className=\"search-bar-placeholder\">Search</span>\n        </label>\n        <Link\n          to=\"/bookmarks\"\n          className=\"bookmarks-button\"\n          onClick={() =>\n            setActiveURL({ routeSlug: \"/bookmarks\", routeTitle: \"Bookmarks\" })\n          }\n        >\n          <FontAwesomeIcon className=\"bookmarks-icon\" icon={faBookmark} />\n          <span className=\"text\">Your Bookmarks</span>\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default PageMeta;\n","import { atom } from \"recoil\";\n\nconst FilterAtom = atom({\n  key: \"FilterAtom\",\n  default: \"Following\",\n});\n\nexport default FilterAtom;\n","import React from \"react\";\nimport \"./PageFilter.css\";\nimport PageSplit from \"../../PageSplit/PageSplit\";\n\nimport { useRecoilState } from \"recoil\";\nimport FilterAtom from \"../../../state/filterAtom\";\n\nfunction PageFilter() {\n  const [postFilter, setFilter] = useRecoilState(FilterAtom);\n\n  return (\n    <section className=\"filter-container\">\n      <PageSplit\n        size=\"medium\"\n        pos=\"bottom\"\n        thickness=\"slim\"\n        transform={{ at: 650, axis: \"x\", pos: \"top\", size: \"medium\" }}\n      />\n      <button\n        className={\n          postFilter === \"Following\"\n            ? \"filter-following active-post-filter\"\n            : \"filter-following\"\n        }\n        onClick={() => setFilter(\"Following\")}\n      >\n        Following\n      </button>\n      <button\n        className={\n          postFilter === \"Popular\"\n            ? \"filter-popular active-post-filter\"\n            : \"filter-popular\"\n        }\n        onClick={() => setFilter(\"Popular\")}\n      >\n        Popular\n      </button>\n      <div\n        className={\n          postFilter === \"Following\"\n            ? \"active-filter-slider\"\n            : \"active-filter-slider slide-right\"\n        }\n      ></div>\n    </section>\n  );\n}\n\nexport default PageFilter;\n","import * as React from \"react\";\nimport PageSplit from \"../PageSplit/PageSplit\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\n\nimport \"./Posts.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\n\nimport { useRecoilState } from \"recoil\";\nimport FilterAtom from \"../../state/filterAtom\";\nimport navigationAtom from \"../../state/navigationAtom\";\n\n// import useInternalPaths from '../../_helpers/useInternalPaths';\n\nconst truncate = (str, maxlength=48) => {\n  if(!str) return \"...\"\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n}\n\nconst Posts = ({ postCount = undefined }) => {\n  // For Searching\n  // const blogRoutes = useInternalPaths().filter(path => path.startsWith(\"/blog\"));\n\n  const [, setURL] = useRecoilState(navigationAtom);\n  let origin = \"https://bridle.ml\";\n\n  React.useEffect(() => {\n    origin = window.location.origin;\n  })\n\n  const {\n    allMdx: { nodes },\n  } = useStaticQuery(BlogPostsMetaData);\n\n  const pages = {\n    following: nodes\n      .filter((post) => post.frontmatter.following !== \"none\")\n      .slice(0, postCount),\n    popular: nodes\n      .filter((post) => post.frontmatter.rank > 0)\n      .sort((rank, rankAsc) => rank.frontmatter.rank - rankAsc.frontmatter.rank)\n      .slice(0, postCount),\n  };\n\n\n  const [activeFilter] = useRecoilState(FilterAtom);\n\n  return (\n    <section className=\"PostsContainer\">\n      <PageSplit\n        size={\"medium\"}\n        pos={\"right\"}\n        thickness={\"slim\"}\n        transform={{ at: 650, axis: \"x\", pos: \"none\", size: \"medium\" }}\n      />\n      {pages[activeFilter.toLowerCase()].map((page) => {\n        let modTags = [];\n        const {\n          frontmatter: {\n            title,\n            description,\n            articleThumbnail,\n            author,\n            authorPicture,\n            slug,\n            tags,\n            rank,\n          },\n          timeToRead,\n        } = page;\n        if (rank > 0) modTags.push(...tags, `#${rank} on Trending ðŸ”¥`);\n        return (\n          <Link key={slug} className=\"blog-route\" to={slug} onClick={() => setURL({ routeTitle: title, routeSlug: slug })}>\n            <div className=\"blog-route-left\">\n              <div className=\"blog-route-author-info\">\n                <div className=\"blog-route-author-profile\">\n                  <img\n                    src={authorPicture}\n                    alt={`${author}'s Profile`}\n                  />\n                </div>\n                <span>{author}</span>\n              </div>\n              <div className=\"blog-route-title\">{truncate(title)}</div>\n              <p className=\"blog-route-description\" data-nosnippet>\n                {description}\n              </p>\n              <div className=\"blog-route-tags\" data-nosnippet>\n                {modTags.length > 1 ? (\n                  modTags.map((tag) => {\n                    return (\n                      <div\n                        key={slug + tag}\n                        className=\"blog-route-tag\"\n                        data-nosnippet\n                      >\n                        {tag}\n                      </div>\n                    );\n                  })\n                ) : (\n                  <div className=\"blog-route-tag\" data-nosnippet>\n                    {tags}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"blog-route-right\">\n              <div className=\"blog-route-thumbnail\">\n                <img src={`${origin}/assets/Thumbnails/${articleThumbnail}`} alt={\"Article Thumbnail\"} />\n              </div>\n              <div className=\"blog-route-estimated\" data-nosnippet>\n                <FontAwesomeIcon\n                  className=\"blog-route-estimated-icon\"\n                  icon={faClock}\n                />\n                <span data-nosnippet>{timeToRead} min(s)</span>\n              </div>\n            </div>\n            <PageSplit size=\"large\" />\n          </Link>\n        );\n      })}\n    </section>\n  );\n};\n\nconst BlogPostsMetaData = graphql`\n  query {\n    allMdx {\n      nodes {\n        frontmatter {\n          rank\n          following\n\n          title\n          description\n          articleThumbnail\n          author\n          authorPicture\n          slug\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`;\n\nexport default Posts;\n","import React from \"react\";\n\n//! Subcomponent Imports\n\n//* PageMeta\nimport PageMeta from \"../components/Explore/PageMeta/PageMeta\";\n\n//* PageFilter\nimport PageFilter from \"../components/Explore/PageFilter/PageFilter\";\nimport Layout from \"../components/layout\";\nimport Posts from \"../components/Posts/Posts\";\n\nfunction Explore() {\n\n  const metaInfo = {\n    title: \"Explore Articles\",\n    description:\n      new Date().toJSON().slice(0, 10).replace(/-/g, \"/\") +\n      \" - \" +\n      \"Some of the most popular hobbyist articles on the site. Gatsby, React & other frameworks are the centrepiece of our articles.\",\n  };\n\n  return (\n    <Layout meta={metaInfo}>\n      <div className=\"ExplorePage\" style={{ width: \"100%\", height: \"100%\" }}>\n        <PageMeta />\n        <PageFilter />\n        <Posts />\n      </div>\n    </Layout>\n  );\n}\n\nexport default Explore;\n"],"names":["title","description","className","setActiveURL","useRecoilState","NavigationAtom","type","placeholder","icon","faSearch","to","onClick","routeSlug","routeTitle","faBookmark","atom","key","default","FilterAtom","postFilter","setFilter","PageSplit","size","pos","thickness","transform","at","axis","BlogPostsMetaData","postCount","undefined","setURL","navigationAtom","origin","React","window","location","nodes","useStaticQuery","allMdx","pages","following","filter","post","frontmatter","slice","popular","rank","sort","rankAsc","activeFilter","toLowerCase","map","page","str","maxlength","modTags","articleThumbnail","author","authorPicture","slug","tags","timeToRead","push","src","alt","length","trim","tag","faClock","metaInfo","Date","toJSON","replace","meta","style","width","height","PageMeta"],"sourceRoot":""}