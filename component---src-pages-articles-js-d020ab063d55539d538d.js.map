{"version":3,"file":"component---src-pages-articles-js-d020ab063d55539d538d.js","mappings":"2KAwCA,IA9BA,YAA6H,IAAD,IAAzGA,MAAAA,OAAyG,MAAnG,cAAmG,MAApFC,YAAAA,OAAoF,MAAxE,wDAAwE,MAAfC,UAAAA,OAAe,MAAL,GAAK,EACjHC,GAAgBC,EAAAA,EAAAA,gBAAeC,EAAAA,GAAxC,GAEA,OACE,2BAASH,UAAS,oBAAsBA,GACtC,uBAAKA,UAAU,aACb,sBAAIA,UAAU,uBAAuBF,GACrC,qBAAGE,UAAU,4BAA4BD,IAE3C,uBAAKC,UAAU,gBACb,yBAAOA,UAAU,cACf,yBAAOI,KAAK,OAAOC,YAAY,MAC/B,gBAAC,IAAD,CAAiBL,UAAU,kBAAkBM,KAAMC,EAAAA,MACnD,wBAAMP,UAAU,0BAAhB,WAEF,gBAAC,KAAD,CACEQ,GAAG,aACHR,UAAU,mBACVS,QAAS,kBACPR,EAAa,CAAES,UAAW,aAAcC,WAAY,gBAGtD,gBAAC,IAAD,CAAiBX,UAAU,iBAAiBM,KAAMM,EAAAA,KAClD,wBAAMZ,UAAU,QAAhB,uB,0HCyFV,IAAMa,EAAiB,aAmBvB,UAzHA,WAEI,IAASC,GAAUZ,EAAAA,EAAAA,gBAAea,EAAAA,GAAlC,GACIC,EAAS,oBAEbC,EAAAA,WAAgB,WACZD,EAASE,OAAOC,SAASH,OACzBF,EAAO,CAACJ,UAAW,YAAaC,WAAY,mBAC7C,IAEL,IACqBS,GACjBC,EAAAA,EAAAA,IAAeR,GADfS,OAAUC,MAGRC,EAAO,CACX1B,MAAO,eACPC,aACE,IAAI0B,MAAOC,SAASC,MAAM,EAAG,IAAIC,QAAQ,KAAM,KAA/C,oIAKJ,OACI,gBAAC,IAAD,CAAQJ,KAAMA,EAAMxB,UAAU,YAC5B,gBAAC,IAAD,CAAUF,MAAM,eAAeC,YAAY,iEACzC,2BAASC,UAAU,mCAEXoB,EAAMS,KAAI,SAACC,GACP,IAjCJC,EAAKC,EAiCD,EAWIF,EAVAG,YACInC,EAFR,EAEQA,MACAC,EAHR,EAGQA,YACAmC,EAJR,EAIQA,iBACAC,EALR,EAKQA,OACAC,EANR,EAMQA,cACAC,EAPR,EAOQA,KACAC,EARR,EAQQA,KAEJC,EACAT,EADAS,WAGJ,OAEE,gBAAC,KAAD,CAAMC,IAAKH,EAAMrC,UAAU,aAAaQ,GAAI6B,EAAM5B,QAAS,kBAAMK,EAAO,CAAEH,WAAYb,EAAOY,UAAW2B,MACpG,uBAAKrC,UAAU,mBACf,uBAAKA,UAAU,0BACX,uBAAKA,UAAU,6BACf,uBACIyC,IAAKL,EACLM,IAAQP,EAAL,gBAGP,4BAAOA,IAEX,uBAAKnC,UAAU,0BA3DH,IAAjBgC,IAAAA,EAAU,KAAfD,EA2DsDjC,GAzD/DiC,EAAIY,OAASX,EAAYD,EAAIJ,MAAM,EAAGK,GAAWY,OAAS,MAAQb,EADzD,QA2DU,qBAAG/B,UAAU,yBAAyB,qBACjCD,GAEL,uBAAKC,UAAU,kBAAkB,qBAC5BsC,EAAKK,OAAS,EACfL,EAAKT,KAAI,SAACgB,GACN,OACA,uBACIL,IAAKH,EAAOQ,EACZ7C,UAAU,iBACV,qBAEC6C,MAKT,uBAAK7C,UAAU,iBAAiB,qBAC3BsC,KAKT,uBAAKtC,UAAU,oBACf,uBAAKA,UAAU,wBACX,uBAAKyC,IAAQzB,EAAL,sBAAiCkB,EAAoBQ,IAAK,uBAEtE,uBAAK1C,UAAU,uBAAuB,qBAClC,gBAAC,IAAD,CACAA,UAAU,4BACVM,KAAMwC,EAAAA,KAEN,wBAAM,qBAAgBP,EAAtB,aAGJ,gBAAC,IAAD,CAAWQ,KAAK","sources":["webpack://blog/./src/components/Explore/PageMeta/PageMeta.js","webpack://blog/./src/pages/articles.js"],"sourcesContent":["import { faBookmark } from \"@fortawesome/free-regular-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PageMeta.css\";\n\nimport NavigationAtom from \"../../../state/navigationAtom\";\nimport { useRecoilState } from \"recoil\";\n\nfunction PageMeta({title=\"What's New?\", description=\"Trending Articles, or even ones from users you Follow\", className=\"\"}) {\n  const [, setActiveURL] = useRecoilState(NavigationAtom);\n\n  return (\n    <section className={`page-content-top ${className}`}>\n      <div className=\"page-meta\">\n        <h1 className=\"page-content-header\">{title}</h1>\n        <p className=\"page-content-description\">{description}</p>\n      </div>\n      <div className=\"page-actions\">\n        <label className=\"search-bar\">\n          <input type=\"text\" placeholder=\" \" />\n          <FontAwesomeIcon className=\"search-bar-icon\" icon={faSearch} />\n          <span className=\"search-bar-placeholder\">Search</span>\n        </label>\n        <Link\n          to=\"/bookmarks\"\n          className=\"bookmarks-button\"\n          onClick={() =>\n            setActiveURL({ routeSlug: \"/bookmarks\", routeTitle: \"Bookmarks\" })\n          }\n        >\n          <FontAwesomeIcon className=\"bookmarks-icon\" icon={faBookmark} />\n          <span className=\"text\">Your Bookmarks</span>\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default PageMeta;\n","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nimport { useRecoilState } from 'recoil';\nimport navigationAtom from '../state/navigationAtom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\n\nimport PageSplit from '../components/PageSplit/PageSplit';\nimport Layout from \"../components/layout\";\nimport PageMeta from '../components/Explore/PageMeta/PageMeta';\n\nimport \"./articles.css\";\n\nconst truncate = (str, maxlength=48) => {\n  if(!str) return \"...\"\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n}\n\nfunction Articles() {\n\n    const [, setURL] = useRecoilState(navigationAtom);\n    let origin = \"https://bridle.ml\";\n\n    React.useEffect(() => {\n        origin = window.location.origin;\n        setURL({routeSlug: \"/articles\", routeTitle: \"All Articles\"});\n    }, [])\n\n  const {\n      allMdx: { nodes: posts }\n  } = useStaticQuery(BlogPostsMetaData);\n\n  const meta = {\n    title: \"All Articles\",\n    description:\n      new Date().toJSON().slice(0, 10).replace(/-/g, \"/\") +\n      \" - \" +\n      \"Some of the most popular hobbyist articles on the site. Gatsby, React & other frameworks are the centrepiece of our articles.\",\n  }\n\n  return (\n      <Layout meta={meta} className=\"use-temp\">\n        <PageMeta title=\"All Articles\" description=\"No trending or popular here, just all articles in one place.\" />\n          <section className=\"PostsContainer AllArticles-Flow\">\n              {\n                  posts.map((post) => {\n                      const {\n                          frontmatter: {\n                              title,\n                              description,\n                              articleThumbnail,\n                              author,\n                              authorPicture,\n                              slug,\n                              tags,\n                          },\n                          timeToRead\n                      } = post;\n\n                      return (\n\n                        <Link key={slug} className=\"blog-route\" to={slug} onClick={() => setURL({ routeTitle: title, routeSlug: slug })}>\n                            <div className=\"blog-route-left\">\n                            <div className=\"blog-route-author-info\">\n                                <div className=\"blog-route-author-profile\">\n                                <img\n                                    src={authorPicture}\n                                    alt={`${author}'s Profile`}\n                                />\n                                </div>\n                                <span>{author}</span>\n                            </div>\n                            <div className=\"blog-route-title\">{truncate(title)}</div>\n                            <p className=\"blog-route-description\" data-nosnippet>\n                                {description}\n                            </p>\n                            <div className=\"blog-route-tags\" data-nosnippet>\n                                {tags.length > 1 ? (\n                                tags.map((tag) => {\n                                    return (\n                                    <div\n                                        key={slug + tag}\n                                        className=\"blog-route-tag\"\n                                        data-nosnippet\n                                    >\n                                        {tag}\n                                    </div>\n                                    );\n                                })\n                                ) : (\n                                <div className=\"blog-route-tag\" data-nosnippet>\n                                    {tags}\n                                </div>\n                                )}\n                            </div>\n                            </div>\n                            <div className=\"blog-route-right\">\n                            <div className=\"blog-route-thumbnail\">\n                                <img src={`${origin}/assets/Thumbnails/${articleThumbnail}`} alt={\"Article Thumbnail\"} />\n                            </div>\n                            <div className=\"blog-route-estimated\" data-nosnippet>\n                                <FontAwesomeIcon\n                                className=\"blog-route-estimated-icon\"\n                                icon={faClock}\n                                />\n                                <span data-nosnippet>{timeToRead} min(s)</span>\n                            </div>\n                            </div>\n                            <PageSplit size=\"large\" />\n                        </Link>\n                      )\n\n                })\n            }\n          </section>\n      </Layout>\n  )\n\n}\n\nconst BlogPostsMetaData = graphql`\n  query {\n    allMdx {\n      nodes {\n        frontmatter {\n          title\n          description\n          articleThumbnail\n          author\n          authorPicture\n          slug\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`;\n\nexport default Articles;"],"names":["title","description","className","setActiveURL","useRecoilState","NavigationAtom","type","placeholder","icon","faSearch","to","onClick","routeSlug","routeTitle","faBookmark","BlogPostsMetaData","setURL","navigationAtom","origin","React","window","location","posts","useStaticQuery","allMdx","nodes","meta","Date","toJSON","slice","replace","map","post","str","maxlength","frontmatter","articleThumbnail","author","authorPicture","slug","tags","timeToRead","key","src","alt","length","trim","tag","faClock","size"],"sourceRoot":""}