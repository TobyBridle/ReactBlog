{"version":3,"file":"component---src-pages-explore-js-9e5504997dd11ffa21bb.js","mappings":"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","sources":["webpack://blog/./src/components/Explore/PageMeta/PageMeta.js","webpack://blog/./src/components/PageSplit/PageSplit.js","webpack://blog/./src/state/filterAtom.js","webpack://blog/./src/components/Explore/PageFilter/PageFilter.js","webpack://blog/./src/components/Posts/Posts.js","webpack://blog/./src/pages/explore.js"],"sourcesContent":["import { faBookmark } from \"@fortawesome/free-regular-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PageMeta.css\";\n\nimport NavigationAtom from \"../../../state/navigationAtom\";\nimport { useRecoilState } from \"recoil\";\n\nfunction PageMeta() {\n  const [_, setActiveURL] = useRecoilState(NavigationAtom);\n\n  return (\n    <section className=\"page-content-top\">\n      <div className=\"page-meta\">\n        <h1 className=\"page-content-header\">What's New?</h1>\n        <p className=\"page-content-description\">\n          Trending Articles, or even ones from users you Follow\n        </p>\n      </div>\n      <div className=\"page-actions\">\n        <label className=\"search-bar\">\n          <input type=\"text\" placeholder=\" \" />\n          <FontAwesomeIcon className=\"search-bar-icon\" icon={faSearch} />\n          <span className=\"search-bar-placeholder\">Search</span>\n        </label>\n        <Link\n          to=\"/bookmarks\"\n          className=\"bookmarks-button\"\n          onClick={() =>\n            setActiveURL({ routeSlug: \"/bookmarks\", routeTitle: \"Bookmarks\" })\n          }\n        >\n          <FontAwesomeIcon className=\"bookmarks-icon\" icon={faBookmark} />\n          <span className=\"text\">Your Bookmarks</span>\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default PageMeta;\n","import React, { useState, useEffect } from \"react\";\nimport \"./PageSplit.css\";\n\nfunction PageSplit({\n  size = \"narrow\",\n  pos = \"bottom\",\n  thickness = \"slim\",\n  transform = { at: null, axis: null, pos: null, size: null },\n}) {\n  const [t, setTransform] = useState(Infinity);\n\n  useEffect(() => {\n    const handleSplitResize = ({ target }) => {\n      let c =\n        transform.axis.toLowerCase() === \"x\"\n          ? target.innerWidth\n          : target.innerHeight;\n      setTransform(c);\n    };\n\n    // Make sure transform is valid\n    if (\n      Math.max(window.innerHeight, window.innerWidth) &&\n      Object.entries(transform).length ===\n        Object.entries(transform).filter(\n          (val) => (val[1] > 0 || val[1]?.length > 0) && val[1] !== null\n        ).length\n    ) {\n      window.addEventListener(\"resize\", handleSplitResize);\n      handleSplitResize({ target: window });\n    }\n\n    return () => {\n      window.removeEventListener(\"resize\", handleSplitResize);\n    };\n  }, []);\n\n  return (\n    <>\n      {t <= transform.at ? (\n        <hr\n          className={`pageSplit ${transform.pos} ${transform.size} ${thickness}`}\n        />\n      ) : (\n        <hr className={`pageSplit ${pos} ${size} ${thickness}`} />\n      )}\n    </>\n  );\n}\n\nexport default PageSplit;\n","import { atom } from \"recoil\";\n\nconst FilterAtom = atom({\n  key: \"FilterAtom\",\n  default: \"Following\",\n});\n\nexport default FilterAtom;\n","import React, { useState } from \"react\";\nimport \"./PageFilter.css\";\nimport PageSplit from \"../../PageSplit/PageSplit\";\n\nimport { useRecoilState } from \"recoil\";\nimport FilterAtom from \"../../../state/filterAtom\";\n\nfunction PageFilter() {\n  const [postFilter, setFilter] = useRecoilState(FilterAtom);\n\n  return (\n    <section className=\"filter-container\">\n      <PageSplit\n        size=\"medium\"\n        pos=\"bottom\"\n        thickness=\"slim\"\n        transform={{ at: 650, axis: \"x\", pos: \"top\", size: \"medium\" }}\n      />\n      <button\n        className={\n          postFilter === \"Following\"\n            ? \"filter-following active-post-filter\"\n            : \"filter-following\"\n        }\n        onClick={() => setFilter(\"Following\")}\n      >\n        Following\n      </button>\n      <button\n        className={\n          postFilter === \"Popular\"\n            ? \"filter-popular active-post-filter\"\n            : \"filter-popular\"\n        }\n        onClick={() => setFilter(\"Popular\")}\n      >\n        Popular\n      </button>\n      <div\n        className={\n          postFilter === \"Following\"\n            ? \"active-filter-slider\"\n            : \"active-filter-slider slide-right\"\n        }\n      ></div>\n    </section>\n  );\n}\n\nexport default PageFilter;\n","import * as React from \"react\";\nimport PageSplit from \"../PageSplit/PageSplit\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\n\nimport \"./Posts.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\n\nimport { useRecoilState } from \"recoil\";\nimport FilterAtom from \"../../state/filterAtom\";\n\n// import useInternalPaths from '../../_helpers/useInternalPaths';\n\nconst truncate = (str, maxlength=48) => {\n  if(!str) return \"...\"\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n}\n\nconst Posts = ({ postCount = undefined }) => {\n  // For Searching\n  // const blogRoutes = useInternalPaths().filter(path => path.startsWith(\"/blog\"));\n\n  const {\n    allMarkdownRemark: { nodes },\n  } = useStaticQuery(BlogPostsMetaData);\n\n  const pages = {\n    following: nodes\n      .filter((post) => post.frontmatter.following !== \"none\")\n      .slice(0, postCount),\n    popular: nodes\n      .filter((post) => post.frontmatter.rank > 0)\n      .sort((rank, rankAsc) => rank.frontmatter.rank - rankAsc.frontmatter.rank)\n      .slice(0, postCount),\n  };\n\n  const [activeFilter] = useRecoilState(FilterAtom);\n\n  return (\n    <section className=\"PostsContainer\">\n      <PageSplit\n        size={\"medium\"}\n        pos={\"right\"}\n        thickness={\"slim\"}\n        transform={{ at: 650, axis: \"x\", pos: \"none\", size: \"medium\" }}\n      />\n      {pages[activeFilter.toLowerCase()].map((page) => {\n        let modTags = [];\n        const {\n          frontmatter: {\n            title,\n            description,\n            articleThumbnail,\n            author,\n            authorPicture,\n            slug,\n            tags,\n            rank,\n          },\n          timeToRead,\n        } = page;\n        if (rank > 0) modTags.push(...tags, `#${rank} on Trending 🔥`);\n        return (\n          <Link key={slug} className=\"blog-route\" to={slug}>\n            <div className=\"blog-route-left\">\n              <div className=\"blog-route-author-info\">\n                <div className=\"blog-route-author-profile\">\n                  <img\n                    src={authorPicture}\n                    alt={`${author}'s Profile Picture`}\n                  />\n                </div>\n                <span>{author}</span>\n              </div>\n              <div className=\"blog-route-title\">{truncate(title)}</div>\n              <p className=\"blog-route-description\" data-nosnippet>\n                {description}\n              </p>\n              <div className=\"blog-route-tags\" data-nosnippet>\n                {modTags.length > 1 ? (\n                  modTags.map((tag) => {\n                    return (\n                      <div\n                        key={slug + tag}\n                        className=\"blog-route-tag\"\n                        data-nosnippet\n                      >\n                        {tag}\n                      </div>\n                    );\n                  })\n                ) : (\n                  <div className=\"blog-route-tag\" data-nosnippet>\n                    {tags}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"blog-route-right\">\n              <div className=\"blog-route-thumbnail\">\n                <img src={articleThumbnail} alt={\"Article Thumbnail\"} />\n              </div>\n              <div className=\"blog-route-estimated\" data-nosnippet>\n                <FontAwesomeIcon\n                  className=\"blog-route-estimated-icon\"\n                  icon={faClock}\n                />\n                <span data-nosnippet>{timeToRead} min(s)</span>\n              </div>\n            </div>\n            <PageSplit size=\"large\" />\n          </Link>\n        );\n      })}\n    </section>\n  );\n};\n\nconst BlogPostsMetaData = graphql`\n  query {\n    allMarkdownRemark {\n      #//! Need to add Limit using \\`lim\\`\n      nodes {\n        frontmatter {\n          rank\n          following\n\n          title\n          description\n          articleThumbnail\n          author\n          authorPicture\n          slug\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`;\n\nexport default Posts;\n","import React from \"react\";\n\n//! Subcomponent Imports\n\n//* PageMeta\nimport PageMeta from \"../components/Explore/PageMeta/PageMeta\";\n\n//* PageFilter\nimport PageFilter from \"../components/Explore/PageFilter/PageFilter\";\nimport Layout from \"../components/layout\";\nimport Posts from \"../components/Posts/Posts\";\n\nimport { useRecoilState } from \"recoil\";\nimport navigationAtom from \"../state/navigationAtom\";\n\nfunction Explore() {\n\n  const metaInfo = {\n    title: \"Explore Articles\",\n    description:\n      new Date().toJSON().slice(0, 10).replace(/-/g, \"/\") +\n      \" - \" +\n      \"Some of the most popular hobbyist articles on the site. Gatsby, React & other frameworks are the centrepiece of our articles.\",\n  };\n\n  return (\n    <Layout meta={metaInfo}>\n      <div className=\"ExplorePage\" style={{ width: \"100%\", height: \"100%\" }}>\n        <PageMeta />\n        <PageFilter />\n        <Posts />\n      </div>\n    </Layout>\n  );\n}\n\nexport default Explore;\n"],"names":["useRecoilState","NavigationAtom","setActiveURL","className","type","placeholder","icon","faSearch","to","onClick","routeSlug","routeTitle","faBookmark","size","pos","thickness","transform","at","axis","useState","Infinity","t","setTransform","useEffect","handleSplitResize","target","c","toLowerCase","innerWidth","innerHeight","Math","max","window","Object","entries","length","filter","val","addEventListener","removeEventListener","atom","key","default","FilterAtom","postFilter","setFilter","BlogPostsMetaData","postCount","undefined","nodes","useStaticQuery","allMarkdownRemark","pages","following","post","frontmatter","slice","popular","rank","sort","rankAsc","activeFilter","map","page","str","maxlength","modTags","title","description","articleThumbnail","author","authorPicture","slug","tags","timeToRead","push","src","alt","trim","tag","faClock","metaInfo","Date","toJSON","replace","meta","style","width","height"],"sourceRoot":""}