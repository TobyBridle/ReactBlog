{"version":3,"file":"component---src-pages-markdown-remark-frontmatter-slug-js-972beab924b0ee1b40b0.js","mappings":"8KAYe,SAASA,EAAT,GAA2D,IALxDC,EAAKC,EAK0CC,EAAQ,EAA/BA,KAAOC,eACzCC,EAAO,CACXC,MAAOH,EAAKI,YAAYD,MACxBE,YAAaL,EAAKI,YAAYC,YAC9BC,OAAQN,EAAKI,YAAYE,OACzBC,MAAOP,EAAKI,YAAYI,kBAE1B,OACE,gBAAC,UAAD,CAAQN,KAAMA,EAAMO,UAAU,kBAC5B,uBAAKA,UAAU,aACb,sBAAIA,UAAU,UAfJX,EAesBE,EAAKI,YAAYD,WAfjB,IAAjBJ,IAAAA,EAAU,IAC3BD,EACGA,EAAIY,OAASX,EAAYD,EAAIa,MAAM,EAAGZ,GAAWa,OAAS,MAAQd,EADzD,QAeV,uBAAKW,UAAU,kBACb,uBAAKA,UAAU,oBAAmB,oCAAeT,EAAKI,YAAYE,QAClE,uBAAKG,UAAU,kBAAiB,kCAAaT,EAAKI,YAAYS,OAEhE,uBAAKJ,UAAU,cACb,uBAAKA,UAAWT,EAAKI,YAAYU,gBAAkB,SAAW,YAAaC,IAAKf,EAAKI,YAAYI,iBAAkBQ,IAAI,gBAGzH,uBAAKP,UAAU,eAAeQ,wBAAyB,CAACC,OAAQlB,EAAKmB","sources":["webpack://blog/./src/pages/{MarkdownRemark.frontmatter__slug}.js"],"sourcesContent":["import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\nimport \"./blogposts.css\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\n\nconst truncate = (str, maxlength=48) => {\n  if(!str) return \"...\"\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n}\n\nexport default function MarkdownTemplate({data: {markdownRemark: data}}) {\n  const meta = {\n    title: data.frontmatter.title,\n    description: data.frontmatter.description,\n    author: data.frontmatter.author,\n    image: data.frontmatter.articleThumbnail\n  }\n  return (\n    <Layout meta={meta} className=\"post-container\">\n      <div className=\"post-info\">\n        <h1 className=\"title\">{truncate(data.frontmatter.title)}</h1>\n        <div className=\"post-info-meta\">\n          <div className=\"post-meta-author\"><p>Author:</p>{data.frontmatter.author}</div>\n          <div className=\"post-meta-date\"><p>Date:</p>{data.frontmatter.date}</div>\n        </div>\n        <div className=\"post-image\">\n          <img className={data.frontmatter.squishThumbnail ? \"squish\" : \"no-squish\"} src={data.frontmatter.articleThumbnail} alt=\"Thumbnail\"></img>\n        </div>\n        </div>\n        <div className=\"post-content\" dangerouslySetInnerHTML={{__html: data.html}}></div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query($id: String!){\n    markdownRemark(id: {eq: $id})\n    {\n      frontmatter {\n        author\n        authorPicture\n        date(formatString: \"MMMM DD YYYY\")\n        title\n        description\n        articleThumbnail\n        squishThumbnail\n      }\n      html\n    }\n  }\n`"],"names":["MarkdownTemplate","str","maxlength","data","markdownRemark","meta","title","frontmatter","description","author","image","articleThumbnail","className","length","slice","trim","date","squishThumbnail","src","alt","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}