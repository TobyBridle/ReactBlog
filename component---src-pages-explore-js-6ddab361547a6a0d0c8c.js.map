{"version":3,"file":"component---src-pages-explore-js-6ddab361547a6a0d0c8c.js","mappings":"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","sources":["webpack://blog/./src/state/filterAtom.js","webpack://blog/./src/components/Explore/PageFilter/PageFilter.js","webpack://blog/./src/components/Posts/Posts.js","webpack://blog/./src/pages/explore.js"],"sourcesContent":["import { atom } from \"recoil\";\n\nconst FilterAtom = atom({\n  key: \"FilterAtom\",\n  default: \"Following\",\n});\n\nexport default FilterAtom;\n","import React from \"react\";\nimport \"./PageFilter.css\";\nimport PageSplit from \"../../PageSplit/PageSplit\";\n\nimport { useRecoilState } from \"recoil\";\nimport FilterAtom from \"../../../state/filterAtom\";\n\nfunction PageFilter() {\n  const [postFilter, setFilter] = useRecoilState(FilterAtom);\n\n  return (\n    <section className=\"filter-container\">\n      <PageSplit\n        size=\"medium\"\n        pos=\"bottom\"\n        thickness=\"slim\"\n        transform={{ at: 650, axis: \"x\", pos: \"top\", size: \"medium\" }}\n      />\n      <button\n        className={\n          postFilter === \"Following\"\n            ? \"filter-following active-post-filter\"\n            : \"filter-following\"\n        }\n        onClick={() => setFilter(\"Following\")}\n      >\n        Following\n      </button>\n      <button\n        className={\n          postFilter === \"Popular\"\n            ? \"filter-popular active-post-filter\"\n            : \"filter-popular\"\n        }\n        onClick={() => setFilter(\"Popular\")}\n      >\n        Popular\n      </button>\n      <div\n        className={\n          postFilter === \"Following\"\n            ? \"active-filter-slider\"\n            : \"active-filter-slider slide-right\"\n        }\n      ></div>\n    </section>\n  );\n}\n\nexport default PageFilter;\n","import * as React from \"react\";\nimport PageSplit from \"../PageSplit/PageSplit\";\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\n\nimport \"./Posts.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\n\nimport { useRecoilState } from \"recoil\";\nimport FilterAtom from \"../../state/filterAtom\";\nimport navigationAtom from \"../../state/navigationAtom\";\n\n// import useInternalPaths from '../../_helpers/useInternalPaths';\n\nconst truncate = (str, maxlength=48) => {\n  if(!str) return \"...\"\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n}\n\nconst Posts = ({ postCount = undefined }) => {\n  // For Searching\n  // const blogRoutes = useInternalPaths().filter(path => path.startsWith(\"/blog\"));\n\n  const [, setURL] = useRecoilState(navigationAtom);\n  let origin = process.env.GATSBY_PAGE_ORIGIN;\n\n  const {\n    allMdx: { nodes },\n  } = useStaticQuery(BlogPostsMetaData);\n\n  const pages = {\n    following: nodes\n      .filter((post) => post.frontmatter.following !== \"none\")\n      .slice(0, postCount),\n    popular: nodes\n      .filter((post) => post.frontmatter.rank > 0)\n      .sort((rank, rankAsc) => rank.frontmatter.rank - rankAsc.frontmatter.rank)\n      .slice(0, postCount),\n  };\n\n\n  const [activeFilter] = useRecoilState(FilterAtom);\n\n  return (\n    <section className=\"PostsContainer\">\n      <PageSplit\n        size={\"medium\"}\n        pos={\"right\"}\n        thickness={\"slim\"}\n        transform={{ at: 650, axis: \"x\", pos: \"none\", size: \"medium\" }}\n      />\n      {pages[activeFilter.toLowerCase()].map((page) => {\n        let modTags = [];\n        const {\n          frontmatter: {\n            title,\n            description,\n            articleThumbnail,\n            author,\n            authorPicture,\n            slug,\n            tags,\n            rank,\n          },\n          timeToRead,\n        } = page;\n        if (rank > 0) modTags.push(...tags, `#${rank} on Trending ðŸ”¥`);\n        return (\n          <Link key={slug} className=\"blog-route\" to={slug} onClick={() => setURL({ routeTitle: title, routeSlug: slug })}>\n            <div className=\"blog-route-left\">\n              <div className=\"blog-route-author-info\">\n                <div className=\"blog-route-author-profile\">\n                  <img\n                    src={authorPicture}\n                    alt={`${author}'s Profile`}\n                  />\n                </div>\n                <span>{author}</span>\n              </div>\n              <div className=\"blog-route-title\">{truncate(title)}</div>\n              <p className=\"blog-route-description\" data-nosnippet>\n                {description}\n              </p>\n              <div className=\"blog-route-tags\" data-nosnippet>\n                {modTags.length > 1 ? (\n                  modTags.map((tag) => {\n                    return (\n                      <div\n                        key={slug + tag}\n                        className=\"blog-route-tag\"\n                        data-nosnippet\n                      >\n                        {tag}\n                      </div>\n                    );\n                  })\n                ) : (\n                  <div className=\"blog-route-tag\" data-nosnippet>\n                    {tags}\n                  </div>\n                )}\n              </div>\n            </div>\n            <div className=\"blog-route-right\">\n              <div className=\"blog-route-thumbnail\">\n                <img src={`${origin}/assets/Thumbnails/${articleThumbnail}`} alt={\"Article Thumbnail\"} />\n              </div>\n              <div className=\"blog-route-estimated\" data-nosnippet>\n                <FontAwesomeIcon\n                  className=\"blog-route-estimated-icon\"\n                  icon={faClock}\n                />\n                <span data-nosnippet>{timeToRead} min(s)</span>\n              </div>\n            </div>\n            <PageSplit size=\"large\" />\n          </Link>\n        );\n      })}\n    </section>\n  );\n};\n\nconst BlogPostsMetaData = graphql`\n  query {\n    allMdx {\n      nodes {\n        frontmatter {\n          rank\n          following\n\n          title\n          description\n          articleThumbnail\n          author\n          authorPicture\n          slug\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`;\n\nexport default Posts;\n","import React from \"react\";\n\n//! Subcomponent Imports\n\n//* PageMeta\nimport PageMeta from \"../components/Explore/PageMeta/PageMeta\";\n\n//* PageFilter\nimport PageFilter from \"../components/Explore/PageFilter/PageFilter\";\nimport Layout from \"../components/layout\";\nimport Posts from \"../components/Posts/Posts\";\n\nfunction Explore() {\n\n  const metaInfo = {\n    title: \"Explore Articles\",\n    description:\n      new Date().toJSON().slice(0, 10).replace(/-/g, \"/\") +\n      \" - \" +\n      \"Some of the most popular hobbyist articles on the site. Gatsby, React & other frameworks are the centrepiece of our articles.\",\n  };\n\n  return (\n    <Layout meta={metaInfo}>\n      <div className=\"ExplorePage\" style={{ width: \"100%\", height: \"100%\" }}>\n        <PageMeta />\n        <PageFilter />\n        <Posts />\n      </div>\n    </Layout>\n  );\n}\n\nexport default Explore;\n"],"names":["atom","key","default","useRecoilState","FilterAtom","postFilter","setFilter","className","PageSplit","size","pos","thickness","transform","at","axis","onClick","BlogPostsMetaData","postCount","undefined","setURL","navigationAtom","nodes","useStaticQuery","allMdx","pages","following","filter","post","frontmatter","slice","popular","rank","sort","rankAsc","activeFilter","toLowerCase","map","page","str","maxlength","modTags","title","description","articleThumbnail","author","authorPicture","slug","tags","timeToRead","push","to","routeTitle","routeSlug","src","alt","length","trim","tag","origin","icon","faClock","metaInfo","Date","toJSON","replace","meta","style","width","height","PageMeta"],"sourceRoot":""}