{"version":3,"file":"component---src-pages-articles-front-end-js-c654989ce978c5f652f1.js","mappings":"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","sources":["webpack://blog/./node_modules/fuzzysearch/index.js","webpack://blog/./src/state/searchAtom.js","webpack://blog/./src/components/Explore/PageMeta/PageMeta.js","webpack://blog/./src/pages/articles/front-end.js"],"sourcesContent":["'use strict';\n\nfunction fuzzysearch(needle, haystack) {\n  var tlen = haystack.length;\n  var qlen = needle.length;\n\n  if (qlen > tlen) {\n    return false;\n  }\n\n  if (qlen === tlen) {\n    return needle === haystack;\n  }\n\n  outer: for (var i = 0, j = 0; i < qlen; i++) {\n    var nch = needle.charCodeAt(i);\n\n    while (j < tlen) {\n      if (haystack.charCodeAt(j++) === nch) {\n        continue outer;\n      }\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = fuzzysearch;","import { atom } from \"recoil\";\n\nconst SearchAtom = atom({\n  key: \"SearchAtom\",\n  default: [],\n});\n\nexport default SearchAtom;\n","import { faBookmark } from \"@fortawesome/free-regular-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PageMeta.css\";\n\nimport NavigationAtom from \"../../../state/navigationAtom\";\nimport SearchAtom from \"../../../state/searchAtom\";\n\nimport { useRecoilState } from \"recoil\";\nimport fuzzySearch from \"fuzzysearch\";\n\nconst truncate = (str, maxlength = 48) => {\n  if (!str) return \"...\";\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n};\n\nfunction PageMeta({\n  title = \"What's New?\",\n  description = \"Trending Articles, or even ones from users you Follow\",\n  className = \"\",\n  postsRef = {},\n}) {\n  const [, setURL] = useRecoilState(NavigationAtom);\n\n  // const [, setSearchResults] = useRecoilState(SearchAtom);\n\n  const searchBar = React.createRef(null);\n  const [searchResults, setSearchResults] = React.useState([]);\n  const keyWhitelist = [\n    \"Enter\",\n    \"Shift\",\n    \"Tab\",\n    \"Escape\",\n    \"Meta\",\n    \"Control\",\n    \"Alt\",\n    \"ArrowLeft\",\n    \"ArrowRight\",\n    \"ArrowUp\",\n    \"ArrowDown\",\n    \"F1\",\n    \"F2\",\n    \"F3\",\n    \"F4\",\n    \"F5\",\n    \"F6\",\n    \"F7\",\n    \"F8\",\n    \"F9\",\n  ];\n\n  const handleSearch = ({ key }) => {\n    // We need to get the current articles in the section.\n    // If the current search result returns false for the criteria we can stop\n    // searching for it\n    if (Object.keys(postsRef).length == 0 || keyWhitelist.includes(key)) return;\n    if (searchBar.current.value.length <= 1 && key == \"Backspace\")\n      return setSearchResults([]);\n\n    // NOTE: We need to handle backspace.\n    if (key == \"Backspace\") {\n      let criteria = searchBar.current.value;\n      let filtered = postsRef.filter((post) =>\n        fuzzySearch(\n          criteria.trim().toLowerCase() + key.toLowerCase(),\n          post.frontmatter.title.toLowerCase()\n        )\n      );\n      setSearchResults(filtered);\n    } else {\n      let filtered = postsRef.filter((post) =>\n        fuzzySearch(\n          searchBar.current.value.trim().toLowerCase() + key.toLowerCase(),\n          post.frontmatter.title.toLowerCase()\n        )\n      );\n      setSearchResults(filtered);\n    }\n  };\n\n  return (\n    <section className={`page-content-top ${className}`}>\n      <div className=\"page-meta\">\n        <h1 className=\"page-content-header\">{title}</h1>\n        <p className=\"page-content-description\">{description}</p>\n      </div>\n      <div className=\"page-actions\">\n        <label className=\"search-bar\">\n          <div className=\"search-bar__widget\">\n            <input\n              type=\"text\"\n              placeholder=\" \"\n              onKeyDown={handleSearch}\n              ref={searchBar}\n            />\n            <FontAwesomeIcon className=\"search-bar-icon\" icon={faSearch} />\n            <span className=\"search-bar-placeholder\">Search</span>\n          </div>\n          <div className=\"search-bar__results\">\n            <ul>\n              {searchResults.length > 0 &&\n                searchResults.map(\n                  ({\n                    frontmatter: {\n                      title,\n                      author,\n                      authorPicture,\n                      description,\n                      tags,\n                      articleThumbnail,\n                      slug,\n                    },\n                    timeToRead,\n                  }) => (\n                    <li className=\"search-result\">\n                      <Link\n                        key={slug}\n                        className=\"blog-route\"\n                        to={slug}\n                        onClick={() =>\n                          setURL({ routeTitle: title, routeSlug: slug })\n                        }\n                      >\n                        <div className=\"blog-route-left\">\n                          <div className=\"blog-route-author-info\">\n                            <div className=\"blog-route-author-profile\">\n                              <img\n                                src={authorPicture}\n                                alt={`${author}'s Profile`}\n                              />\n                            </div>\n                            <span>{author}</span>\n                          </div>\n                          <div className=\"blog-route-title\">\n                            {truncate(title)}\n                          </div>\n                          <p className=\"blog-route-description\" data-nosnippet>\n                            {description}\n                          </p>\n                          <div className=\"blog-route-tags\" data-nosnippet>\n                            {tags.length > 1 ? (\n                              tags.map((tag) => {\n                                return (\n                                  <div\n                                    key={slug + tag}\n                                    className=\"blog-route-tag\"\n                                    data-nosnippet\n                                  >\n                                    {tag}\n                                  </div>\n                                );\n                              })\n                            ) : (\n                              <div className=\"blog-route-tag\" data-nosnippet>\n                                {tags}\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                        <div className=\"blog-route-right\">\n                          <div className=\"blog-route-thumbnail\">\n                            <img\n                              src={`${origin}/assets/Thumbnails/${articleThumbnail}`}\n                              alt={\"Article Thumbnail\"}\n                            />\n                          </div>\n                          <div className=\"blog-route-estimated\" data-nosnippet>\n                            <FontAwesomeIcon\n                              className=\"blog-route-estimated-icon\"\n                              icon={faClock}\n                            />\n                            <span data-nosnippet>{timeToRead} min(s)</span>\n                          </div>\n                        </div>\n                      </Link>\n                    </li>\n                  )\n                )}\n            </ul>\n          </div>\n        </label>\n        <Link\n          to=\"/bookmarks\"\n          className=\"bookmarks-button\"\n          onClick={() =>\n            setURL({ routeSlug: \"/bookmarks\", routeTitle: \"Bookmarks\" })\n          }\n        >\n          <FontAwesomeIcon className=\"bookmarks-icon\" icon={faBookmark} />\n          <span className=\"text\">Your Bookmarks</span>\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default PageMeta;\n","import React from \"react\";\nimport PageMeta from \"../../components/Explore/PageMeta/PageMeta\";\nimport PageSplit from \"../../components/PageSplit/PageSplit\";\nimport Layout from \"../../components/layout\";\n\nimport { useRecoilState } from \"recoil\";\nimport navigationAtom from \"../../state/navigationAtom\";\n\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faClock } from \"@fortawesome/free-regular-svg-icons\";\n\nimport \"./temp.css\";\n\nconst truncate = (str, maxlength = 48) => {\n  if (!str) return \"...\";\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n};\n\nexport default function FrontEnd() {\n  const [, setURL] = useRecoilState(navigationAtom);\n\n  {\n    /* let origin = process.env.GATSBY_PAGE_ORIGIN; */\n  }\n\n  React.useEffect(() => {\n    setURL({\n      routeSlug: \"/articles/front-end\",\n      routeTitle: \"Front-End\",\n    });\n  }, []);\n\n  const meta = {\n    title: \"Articles about Front-End\",\n    description:\n      new Date().toJSON().slice(0, 10).replace(/-/g, \"/\") +\n      \" - \" +\n      \"Want to read some articles about Front-End Developoment? Look no further, here are some articles to release the CSS-hating monster inside you.\",\n  };\n\n  let {\n    allMdx: { nodes: posts },\n  } = useStaticQuery(BlogPostsMetaData);\n\n  posts = posts.filter((post) => post.frontmatter.tags.includes(\"Front End\"));\n\n  return (\n    <Layout meta={meta} className=\"use-temp\">\n      <PageMeta\n        title=\"Front-End Articles\"\n        description=\"Articles to release the CSS-hating monster inside you.\"\n        postsRef={posts}\n      />\n      <section className=\"PostsContainer AllArticles-Flow\">\n        {posts.map((post) => {\n          const {\n            frontmatter: {\n              title,\n              description,\n              articleThumbnail,\n              author,\n              authorPicture,\n              slug,\n              tags,\n            },\n            timeToRead,\n          } = post;\n\n          return (\n            <Link\n              key={slug}\n              className=\"blog-route\"\n              to={slug}\n              onClick={() => setURL({ routeTitle: title, routeSlug: slug })}\n            >\n              <div className=\"blog-route-left\">\n                <div className=\"blog-route-author-info\">\n                  <div className=\"blog-route-author-profile\">\n                    <img src={authorPicture} alt={`${author}'s Profile`} />\n                  </div>\n                  <span>{author}</span>\n                </div>\n                <div className=\"blog-route-title\">{truncate(title)}</div>\n                <p className=\"blog-route-description\" data-nosnippet>\n                  {description}\n                </p>\n                <div className=\"blog-route-tags\" data-nosnippet>\n                  {tags.length > 1 ? (\n                    tags.map((tag) => {\n                      return (\n                        <div\n                          key={slug + tag}\n                          className=\"blog-route-tag\"\n                          data-nosnippet\n                        >\n                          {tag}\n                        </div>\n                      );\n                    })\n                  ) : (\n                    <div className=\"blog-route-tag\" data-nosnippet>\n                      {tags}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className=\"blog-route-right\">\n                <div className=\"blog-route-thumbnail\">\n                  <img\n                    src={`${origin}/assets/Thumbnails/${articleThumbnail}`}\n                    alt={\"Article Thumbnail\"}\n                  />\n                </div>\n                <div className=\"blog-route-estimated\" data-nosnippet>\n                  <FontAwesomeIcon\n                    className=\"blog-route-estimated-icon\"\n                    icon={faClock}\n                  />\n                  <span data-nosnippet>{timeToRead} min(s)</span>\n                </div>\n              </div>\n              <PageSplit size=\"large\" />\n            </Link>\n          );\n        })}\n      </section>\n    </Layout>\n  );\n}\n\nconst BlogPostsMetaData = graphql`\n  query {\n    allMdx {\n      nodes {\n        frontmatter {\n          title\n          description\n          articleThumbnail\n          author\n          authorPicture\n          slug\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`;\n"],"names":["module","exports","needle","haystack","tlen","length","qlen","outer","i","j","nch","charCodeAt","atom","key","default","title","description","className","postsRef","setURL","useRecoilState","NavigationAtom","searchBar","React","searchResults","setSearchResults","keyWhitelist","type","placeholder","onKeyDown","Object","keys","includes","current","value","criteria","filtered","filter","post","fuzzySearch","trim","toLowerCase","frontmatter","ref","icon","faSearch","map","str","maxlength","author","authorPicture","tags","articleThumbnail","slug","timeToRead","to","onClick","routeTitle","routeSlug","src","alt","slice","tag","origin","faClock","faBookmark","FrontEnd","navigationAtom","meta","Date","toJSON","replace","posts","useStaticQuery","BlogPostsMetaData","allMdx","nodes","size"],"sourceRoot":""}