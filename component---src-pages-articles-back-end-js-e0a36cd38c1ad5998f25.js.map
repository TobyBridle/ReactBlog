{"version":3,"file":"component---src-pages-articles-back-end-js-e0a36cd38c1ad5998f25.js","mappings":"2KAwCA,IA9BA,YAA6H,IAAD,IAAzGA,MAAAA,OAAyG,MAAnG,cAAmG,MAApFC,YAAAA,OAAoF,MAAxE,wDAAwE,MAAfC,UAAAA,OAAe,MAAL,GAAK,EACjHC,GAAgBC,EAAAA,EAAAA,gBAAeC,EAAAA,GAAxC,GAEA,OACE,2BAASH,UAAS,oBAAsBA,GACtC,uBAAKA,UAAU,aACb,sBAAIA,UAAU,uBAAuBF,GACrC,qBAAGE,UAAU,4BAA4BD,IAE3C,uBAAKC,UAAU,gBACb,yBAAOA,UAAU,cACf,yBAAOI,KAAK,OAAOC,YAAY,MAC/B,gBAAC,IAAD,CAAiBL,UAAU,kBAAkBM,KAAMC,EAAAA,MACnD,wBAAMP,UAAU,0BAAhB,WAEF,gBAAC,KAAD,CACEQ,GAAG,aACHR,UAAU,mBACVS,QAAS,kBACPR,EAAa,CAAES,UAAW,aAAcC,WAAY,gBAGtD,gBAAC,IAAD,CAAiBX,UAAU,iBAAiBM,KAAMM,EAAAA,KAClD,wBAAMZ,UAAU,QAAhB,uB,gKCbK,SAASa,IAEpB,IAASC,GAAUZ,EAAAA,EAAAA,gBAAea,EAAAA,GAAlC,GAEIC,EAAS,oBAEbC,EAAAA,WAAgB,WACZD,EAASE,OAAOC,SAASH,OACzBF,EAAO,CACHJ,UAAW,qBACXC,WAAY,eAEjB,IAEH,IAAMS,EAAO,CACTtB,MAAO,0BACPC,aAAa,IAAIsB,MAAOC,SAASC,MAAM,EAAG,IAAIC,QAAQ,KAAM,KAA/C,iJAKIC,GACjBC,EAAAA,EAAAA,IAAeC,GADfC,OAAUC,MAKd,OAFAJ,EAAQA,EAAMK,QAAO,SAAAC,GAAI,OAAIA,EAAKC,YAAYC,KAAKC,SAAS,eAGxD,gBAAC,IAAD,CAAQd,KAAMA,EAAMpB,UAAU,YAC9B,gBAAC,IAAD,CAAUF,MAAM,oBAAoBC,YAAY,yDAChD,2BAASC,UAAU,mCAEXyB,EAAMU,KAAI,SAACJ,GACP,IArCFK,EAAKC,EAqCH,EAWIN,EAVAC,YACIlC,EAFR,EAEQA,MACAC,EAHR,EAGQA,YACAuC,EAJR,EAIQA,iBACAC,EALR,EAKQA,OACAC,EANR,EAMQA,cACAC,EAPR,EAOQA,KACAR,EARR,EAQQA,KAEJS,EACAX,EADAW,WAGJ,OAEA,gBAAC,KAAD,CAAMC,IAAKF,EAAMzC,UAAU,aAAaQ,GAAIiC,EAAMhC,QAAS,kBAAMK,EAAO,CAAEH,WAAYb,EAAOY,UAAW+B,MACpG,uBAAKzC,UAAU,mBACf,uBAAKA,UAAU,0BACX,uBAAKA,UAAU,6BACf,uBACI4C,IAAKJ,EACLK,IAAQN,EAAL,gBAGP,4BAAOA,IAEX,uBAAKvC,UAAU,0BA/DC,IAAjBqC,IAAAA,EAAU,KAAfD,EA+DkDtC,GA7D3DsC,EAAIU,OAAST,EAAYD,EAAIb,MAAM,EAAGc,GAAWU,OAAS,MAAQX,EADzD,QA+DM,qBAAGpC,UAAU,yBAAyB,qBACjCD,GAEL,uBAAKC,UAAU,kBAAkB,qBAC5BiC,EAAKa,OAAS,EACfb,EAAKE,KAAI,SAACa,GACN,OACA,uBACIL,IAAKF,EAAOO,EACZhD,UAAU,iBACV,qBAECgD,MAKT,uBAAKhD,UAAU,iBAAiB,qBAC3BiC,KAKT,uBAAKjC,UAAU,oBACf,uBAAKA,UAAU,wBACX,uBAAK4C,IAAQ5B,EAAL,sBAAiCsB,EAAoBO,IAAK,uBAEtE,uBAAK7C,UAAU,uBAAuB,qBAClC,gBAAC,IAAD,CACAA,UAAU,4BACVM,KAAM2C,EAAAA,KAEN,wBAAM,qBAAgBP,EAAtB,aAGJ,gBAAC,IAAD,CAAWQ,KAAK,gBAWxC,IAAMvB,EAAiB","sources":["webpack://blog/./src/components/Explore/PageMeta/PageMeta.js","webpack://blog/./src/pages/articles/back-end.js"],"sourcesContent":["import { faBookmark } from \"@fortawesome/free-regular-svg-icons\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./PageMeta.css\";\n\nimport NavigationAtom from \"../../../state/navigationAtom\";\nimport { useRecoilState } from \"recoil\";\n\nfunction PageMeta({title=\"What's New?\", description=\"Trending Articles, or even ones from users you Follow\", className=\"\"}) {\n  const [, setActiveURL] = useRecoilState(NavigationAtom);\n\n  return (\n    <section className={`page-content-top ${className}`}>\n      <div className=\"page-meta\">\n        <h1 className=\"page-content-header\">{title}</h1>\n        <p className=\"page-content-description\">{description}</p>\n      </div>\n      <div className=\"page-actions\">\n        <label className=\"search-bar\">\n          <input type=\"text\" placeholder=\" \" />\n          <FontAwesomeIcon className=\"search-bar-icon\" icon={faSearch} />\n          <span className=\"search-bar-placeholder\">Search</span>\n        </label>\n        <Link\n          to=\"/bookmarks\"\n          className=\"bookmarks-button\"\n          onClick={() =>\n            setActiveURL({ routeSlug: \"/bookmarks\", routeTitle: \"Bookmarks\" })\n          }\n        >\n          <FontAwesomeIcon className=\"bookmarks-icon\" icon={faBookmark} />\n          <span className=\"text\">Your Bookmarks</span>\n        </Link>\n      </div>\n    </section>\n  );\n}\n\nexport default PageMeta;\n","import React from 'react';\nimport PageMeta from '../../components/Explore/PageMeta/PageMeta';\nimport PageSplit from '../../components/PageSplit/PageSplit';\nimport Layout from '../../components/layout';\n\nimport { useRecoilState } from 'recoil';\nimport navigationAtom from '../../state/navigationAtom';\n\nimport { useStaticQuery, graphql, Link } from 'gatsby';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClock } from '@fortawesome/free-regular-svg-icons';\n\nimport \"./temp.css\"\n\nconst truncate = (str, maxlength=48) => {\n  if(!str) return \"...\"\n  return str.length > maxlength ? str.slice(0, maxlength).trim() + \"...\" : str;\n}\n\nexport default function FrontEnd() {\n\n    const [, setURL] = useRecoilState(navigationAtom);\n\n    let origin = \"https://bridle.ml\";\n\n    React.useEffect(() => {\n        origin = window.location.origin;\n        setURL({\n            routeSlug: \"/articles/back-end\",\n            routeTitle: \"Back-End\"\n        })\n    }, [])\n\n    const meta = {\n        title: \"Articles about Back-End\",\n        description: new Date().toJSON().slice(0, 10).replace(/-/g, \"/\") +\n      \" - \" + \"Want to read some articles about Back-End Developoment? Look no further, here are some articles to release the StackOverflow inside of you\" \n    }\n\n    let  {\n        allMdx: { nodes: posts }\n    } = useStaticQuery(BlogPostsMetaData)\n\n    posts = posts.filter(post => post.frontmatter.tags.includes(\"Back End\"));\n\n    return (\n        <Layout meta={meta} className=\"use-temp\">\n        <PageMeta title=\"Back-End Articles\" description=\"Articles to release the StackOverflow inside of you.\"/>\n        <section className=\"PostsContainer AllArticles-Flow\">\n            {\n                posts.map((post) => {\n                    const {\n                        frontmatter: {\n                            title,\n                            description,\n                            articleThumbnail,\n                            author,\n                            authorPicture,\n                            slug,\n                            tags,\n                        },\n                        timeToRead\n                    } = post;\n\n                    return (\n\n                    <Link key={slug} className=\"blog-route\" to={slug} onClick={() => setURL({ routeTitle: title, routeSlug: slug })}>\n                        <div className=\"blog-route-left\">\n                        <div className=\"blog-route-author-info\">\n                            <div className=\"blog-route-author-profile\">\n                            <img\n                                src={authorPicture}\n                                alt={`${author}'s Profile`}\n                            />\n                            </div>\n                            <span>{author}</span>\n                        </div>\n                        <div className=\"blog-route-title\">{truncate(title)}</div>\n                        <p className=\"blog-route-description\" data-nosnippet>\n                            {description}\n                        </p>\n                        <div className=\"blog-route-tags\" data-nosnippet>\n                            {tags.length > 1 ? (\n                            tags.map((tag) => {\n                                return (\n                                <div\n                                    key={slug + tag}\n                                    className=\"blog-route-tag\"\n                                    data-nosnippet\n                                >\n                                    {tag}\n                                </div>\n                                );\n                            })\n                            ) : (\n                            <div className=\"blog-route-tag\" data-nosnippet>\n                                {tags}\n                            </div>\n                            )}\n                        </div>\n                        </div>\n                        <div className=\"blog-route-right\">\n                        <div className=\"blog-route-thumbnail\">\n                            <img src={`${origin}/assets/Thumbnails/${articleThumbnail}`} alt={\"Article Thumbnail\"} />\n                        </div>\n                        <div className=\"blog-route-estimated\" data-nosnippet>\n                            <FontAwesomeIcon\n                            className=\"blog-route-estimated-icon\"\n                            icon={faClock}\n                            />\n                            <span data-nosnippet>{timeToRead} min(s)</span>\n                        </div>\n                        </div>\n                        <PageSplit size=\"large\" />\n                    </Link>\n                    )\n\n            })\n        }\n        </section>\n    </Layout>\n  )\n}\n\nconst BlogPostsMetaData = graphql`\n  query {\n    allMdx{\n      nodes {\n        frontmatter {\n          title\n          description\n          articleThumbnail\n          author\n          authorPicture\n          slug\n          tags\n        }\n        timeToRead\n      }\n    }\n  }\n`;"],"names":["title","description","className","setActiveURL","useRecoilState","NavigationAtom","type","placeholder","icon","faSearch","to","onClick","routeSlug","routeTitle","faBookmark","FrontEnd","setURL","navigationAtom","origin","React","window","location","meta","Date","toJSON","slice","replace","posts","useStaticQuery","BlogPostsMetaData","allMdx","nodes","filter","post","frontmatter","tags","includes","map","str","maxlength","articleThumbnail","author","authorPicture","slug","timeToRead","key","src","alt","length","trim","tag","faClock","size"],"sourceRoot":""}